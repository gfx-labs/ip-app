/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CappedBptToken,
  CappedBptTokenInterface,
} from "../../lending/CappedBptToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint96",
        name: "vaultId",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "cappedBPTtransfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_underlying",
    outputs: [
      {
        internalType: "contract ERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_vaultController",
    outputs: [
      {
        internalType: "contract IVaultController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_votingVaultController",
    outputs: [
      {
        internalType: "contract VotingVaultController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint96",
        name: "vaultId",
        type: "uint96",
      },
      {
        internalType: "bool",
        name: "stake",
        type: "bool",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "underlying_",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultController_",
        type: "address",
      },
      {
        internalType: "address",
        name: "votingVaultController_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cap_",
        type: "uint256",
      },
    ],
    name: "setCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506119f0806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063715018a6116100b8578063a457c2d71161007c578063a457c2d714610290578063a9059cbb146102a3578063b1290dad146102b6578063db0ed6a0146102c9578063dd62ed3e146102dc578063f2fde38b1461031557600080fd5b8063715018a6146102495780638da5cb5b1461025157806395d89b41146102625780639e5736651461026a578063a129e00c1461027d57600080fd5b8063313ce5671161010a578063313ce567146101b6578063364a2b1a146101c557806339509351146101f057806347786d3714610203578063554d578d1461021857806370a082311461022057600080fd5b8063060cf4e81461014757806306fdde0314610163578063095ea7b31461017857806318160ddd1461019b57806323b872dd146101a3575b600080fd5b610150609a5481565b6040519081526020015b60405180910390f35b61016b610328565b60405161015a919061157a565b61018b6101863660046115c2565b6103ba565b604051901515815260200161015a565b606754610150565b61018b6101b13660046115ee565b6103d0565b6040516012815260200161015a565b6099546101d8906001600160a01b031681565b6040516001600160a01b03909116815260200161015a565b61018b6101fe3660046115c2565b6103da565b61021661021136600461162f565b610416565b005b609a54610150565b61015061022e366004611648565b6001600160a01b031660009081526065602052604090205490565b61021661044e565b6033546001600160a01b03166101d8565b61016b610484565b6097546101d8906001600160a01b031681565b61021661028b366004611688565b610493565b61018b61029e3660046115c2565b610744565b61018b6102b13660046115c2565b6107dd565b6098546101d8906001600160a01b031681565b6102166102d736600461176d565b610a59565b6101506102ea36600461180b565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b610216610323366004611648565b610b23565b60606068805461033790611844565b80601f016020809104026020016040519081016040528092919081815260200182805461036390611844565b80156103b05780601f10610385576101008083540402835291602001916103b0565b820191906000526020600020905b81548152906001019060200180831161039357829003601f168201915b5050505050905090565b60006103c7338484610bbe565b50600192915050565b60005b9392505050565b3360008181526066602090815260408083206001600160a01b038716845290915281205490916103c7918590610411908690611895565b610bbe565b6033546001600160a01b031633146104495760405162461bcd60e51b8152600401610440906118ad565b60405180910390fd5b609a55565b6033546001600160a01b031633146104785760405162461bcd60e51b8152600401610440906118ad565b6104826000610ce3565b565b60606069805461033790611844565b609b805460ff19166001179055826104e05760405162461bcd60e51b815260206004820152601060248201526f043616e6e6f74206465706f73697420360841b6044820152606401610440565b60995460405163c16edeb960e01b81526001600160601b03841660048201526000916001600160a01b03169063c16edeb99060240160206040518083038186803b15801561052d57600080fd5b505afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056591906118e2565b90506001600160a01b0381166105b45760405162461bcd60e51b81526020600482015260146024820152731a5b9d985b1a59081d9bdd1a5b99c81d985d5b1d60621b6044820152606401610440565b60985460405163d912c42760e01b81526001600160601b03851660048201526000916001600160a01b03169063d912c4279060240160206040518083038186803b15801561060157600080fd5b505afa158015610615573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063991906118e2565b90506001600160a01b0381166106815760405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a59081d985d5b1d609a1b6044820152606401610440565b61068a85610d35565b6106948186610d88565b6106ac336097546001600160a01b0316908488610e67565b821561073357609754604051630cd0781960e01b81526001600160a01b03918216600482015290831690630cd0781990602401602060405180830381600087803b1580156106f957600080fd5b505af115801561070d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073191906118ff565b505b5050609b805460ff19169055505050565b3360009081526066602090815260408083206001600160a01b0386168452909152812054828110156107c65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610440565b6107d33385858403610bbe565b5060019392505050565b60995460009081906001600160a01b0316637726a73c336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561083357600080fd5b505afa158015610847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086b919061191c565b90506000816001600160601b0316116108b45760405162461bcd60e51b815260206004820152600b60248201526a6f6e6c79207661756c747360a81b6044820152606401610440565b60995460405163c16edeb960e01b81526001600160601b03831660048201526000916001600160a01b03169063c16edeb99060240160206040518083038186803b15801561090157600080fd5b505afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093991906118e2565b90506001600160a01b0381166109835760405162461bcd60e51b815260206004820152600f60248201526e1b9bc81d9bdd1a5b99c81d985d5b1d608a1b6044820152606401610440565b61098d3385610ec7565b60995460405163ee647e0760e01b8152600481018690526001600160a01b03838116602483015287811660448301529091169063ee647e0790606401600060405180830381600087803b1580156109e357600080fd5b505af11580156109f7573d6000803e3d6000fd5b5050604080516001600160601b03861681526001600160a01b03891660208201529081018790527f105dbf2718ac652ce31130705e8e4fe2971fbd2824b2fd68c5508f3a72230d259250606001905060405180910390a1506001949350505050565b600054610100900460ff1680610a72575060005460ff16155b610a8e5760405162461bcd60e51b815260040161044090611939565b600054610100900460ff16158015610ab0576000805461ffff19166101011790555b610ab8611012565b610ac2868661108d565b609780546001600160a01b038087166001600160a01b031992831617909255609880548684169083161790556099805492851692909116919091179055609b805460ff191690558015610b1b576000805461ff00191690555b505050505050565b6033546001600160a01b03163314610b4d5760405162461bcd60e51b8152600401610440906118ad565b6001600160a01b038116610bb25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610440565b610bbb81610ce3565b50565b6001600160a01b038316610c205760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610440565b6001600160a01b038216610c815760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610440565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b609a5481610d4260675490565b610d4c9190611895565b1115610bbb5760405162461bcd60e51b815260206004820152600b60248201526a18d85c081c995858da195960aa1b6044820152606401610440565b6001600160a01b038216610dde5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610440565b8060676000828254610df09190611895565b90915550506001600160a01b03821660009081526065602052604081208054839290610e1d908490611895565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610ec190859061110c565b50505050565b6001600160a01b038216610f275760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610440565b6001600160a01b03821660009081526065602052604090205481811015610f9b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610440565b6001600160a01b0383166000908152606560205260408120838303905560678054849290610fca908490611987565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610cd6565b505050565b600054610100900460ff168061102b575060005460ff16155b6110475760405162461bcd60e51b815260040161044090611939565b600054610100900460ff16158015611069576000805461ffff19166101011790555b6110716111de565b611079611248565b8015610bbb576000805461ff001916905550565b600054610100900460ff16806110a6575060005460ff16155b6110c25760405162461bcd60e51b815260040161044090611939565b600054610100900460ff161580156110e4576000805461ffff19166101011790555b6110ec6111de565b6110f683836112a8565b801561100d576000805461ff0019169055505050565b6000611161826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661133d9092919063ffffffff16565b80519091501561100d578080602001905181019061117f91906118ff565b61100d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610440565b600054610100900460ff16806111f7575060005460ff16155b6112135760405162461bcd60e51b815260040161044090611939565b600054610100900460ff16158015611079576000805461ffff19166101011790558015610bbb576000805461ff001916905550565b600054610100900460ff1680611261575060005460ff16155b61127d5760405162461bcd60e51b815260040161044090611939565b600054610100900460ff1615801561129f576000805461ffff19166101011790555b61107933610ce3565b600054610100900460ff16806112c1575060005460ff16155b6112dd5760405162461bcd60e51b815260040161044090611939565b600054610100900460ff161580156112ff576000805461ffff19166101011790555b82516113129060689060208601906114b5565b5081516113269060699060208501906114b5565b50801561100d576000805461ff0019169055505050565b606061134c8484600085611354565b949350505050565b6060824710156113b55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610440565b843b6114035760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610440565b600080866001600160a01b0316858760405161141f919061199e565b60006040518083038185875af1925050503d806000811461145c576040519150601f19603f3d011682016040523d82523d6000602084013e611461565b606091505b509150915061147182828661147c565b979650505050505050565b6060831561148b5750816103d3565b82511561149b5782518084602001fd5b8160405162461bcd60e51b8152600401610440919061157a565b8280546114c190611844565b90600052602060002090601f0160209004810192826114e35760008555611529565b82601f106114fc57805160ff1916838001178555611529565b82800160010185558215611529579182015b8281111561152957825182559160200191906001019061150e565b50611535929150611539565b5090565b5b80821115611535576000815560010161153a565b60005b83811015611569578181015183820152602001611551565b83811115610ec15750506000910152565b602081526000825180602084015261159981604085016020870161154e565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610bbb57600080fd5b600080604083850312156115d557600080fd5b82356115e0816115ad565b946020939093013593505050565b60008060006060848603121561160357600080fd5b833561160e816115ad565b9250602084013561161e816115ad565b929592945050506040919091013590565b60006020828403121561164157600080fd5b5035919050565b60006020828403121561165a57600080fd5b81356103d3816115ad565b6001600160601b0381168114610bbb57600080fd5b8015158114610bbb57600080fd5b60008060006060848603121561169d57600080fd5b8335925060208401356116af81611665565b915060408401356116bf8161167a565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126116f157600080fd5b813567ffffffffffffffff8082111561170c5761170c6116ca565b604051601f8301601f19908116603f01168101908282118183101715611734576117346116ca565b8160405283815286602085880101111561174d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561178557600080fd5b853567ffffffffffffffff8082111561179d57600080fd5b6117a989838a016116e0565b965060208801359150808211156117bf57600080fd5b506117cc888289016116e0565b94505060408601356117dd816115ad565b925060608601356117ed816115ad565b915060808601356117fd816115ad565b809150509295509295909350565b6000806040838503121561181e57600080fd5b8235611829816115ad565b91506020830135611839816115ad565b809150509250929050565b600181811c9082168061185857607f821691505b6020821081141561187957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156118a8576118a861187f565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156118f457600080fd5b81516103d3816115ad565b60006020828403121561191157600080fd5b81516103d38161167a565b60006020828403121561192e57600080fd5b81516103d381611665565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000828210156119995761199961187f565b500390565b600082516119b081846020870161154e565b919091019291505056fea2646970667358221220db1c8a622fe802c0cc5bb85e196eb12bfe0fe6fd583ae1d8654ea122c219868d64736f6c63430008090033";

type CappedBptTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CappedBptTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CappedBptToken__factory extends ContractFactory {
  constructor(...args: CappedBptTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CappedBptToken> {
    return super.deploy(overrides || {}) as Promise<CappedBptToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CappedBptToken {
    return super.attach(address) as CappedBptToken;
  }
  override connect(signer: Signer): CappedBptToken__factory {
    return super.connect(signer) as CappedBptToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CappedBptTokenInterface {
    return new utils.Interface(_abi) as CappedBptTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CappedBptToken {
    return new Contract(address, _abi, signerOrProvider) as CappedBptToken;
  }
}
