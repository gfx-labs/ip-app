/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CappedERC4626,
  CappedERC4626Interface,
} from "../../lending/CappedERC4626";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_baseUnderlying",
    outputs: [
      {
        internalType: "contract ERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_underlying",
    outputs: [
      {
        internalType: "contract ERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_vaultController",
    outputs: [
      {
        internalType: "contract IVaultController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_votingVaultController",
    outputs: [
      {
        internalType: "contract VotingVaultController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint96",
        name: "vaultId",
        type: "uint96",
      },
      {
        internalType: "bool",
        name: "depositBase",
        type: "bool",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "underlying_",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseUnderlying_",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultController_",
        type: "address",
      },
      {
        internalType: "address",
        name: "votingVaultController_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cap_",
        type: "uint256",
      },
    ],
    name: "setCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c2b806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063a457c2d71161007c578063a457c2d7146102ae578063a9059cbb146102c1578063b1290dad146102d4578063dd62ed3e146102e7578063e56f2fe414610320578063f2fde38b1461033357600080fd5b8063715018a61461025457806388803b661461025c5780638da5cb5b1461026f57806395d89b41146102805780639e57366514610288578063a129e00c1461029b57600080fd5b8063313ce56711610115578063313ce567146101c1578063364a2b1a146101d057806339509351146101fb57806347786d371461020e578063554d578d1461022357806370a082311461022b57600080fd5b8063060cf4e81461015257806306fdde031461016e578063095ea7b31461018357806318160ddd146101a657806323b872dd146101ae575b600080fd5b61015b60cd5481565b6040519081526020015b60405180910390f35b610176610346565b6040516101659190611740565b610196610191366004611788565b6103d8565b6040519015158152602001610165565b60675461015b565b6101966101bc3660046117b4565b6103ee565b60405160128152602001610165565b60cc546101e3906001600160a01b031681565b6040516001600160a01b039091168152602001610165565b610196610209366004611788565b6103f8565b61022161021c3660046117f5565b610434565b005b60cd5461015b565b61015b61023936600461180e565b6001600160a01b031660009081526065602052604090205490565b61022161046c565b60ca546101e3906001600160a01b031681565b6033546001600160a01b03166101e3565b6101766104a2565b60c9546101e3906001600160a01b031681565b6102216102a936600461184e565b6104b1565b6101966102bc366004611788565b610738565b6101966102cf366004611788565b6107d1565b60cb546101e3906001600160a01b031681565b61015b6102f5366004611890565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b61022161032e36600461196c565b610a00565b61022161034136600461180e565b610ad6565b60606068805461035590611a1b565b80601f016020809104026020016040519081016040528092919081815260200182805461038190611a1b565b80156103ce5780601f106103a3576101008083540402835291602001916103ce565b820191906000526020600020905b8154815290600101906020018083116103b157829003601f168201915b5050505050905090565b60006103e5338484610b71565b50600192915050565b60005b9392505050565b3360008181526066602090815260408083206001600160a01b038716845290915281205490916103e591859061042f908690611a6c565b610b71565b6033546001600160a01b031633146104675760405162461bcd60e51b815260040161045e90611a84565b60405180910390fd5b60cd55565b6033546001600160a01b031633146104965760405162461bcd60e51b815260040161045e90611a84565b6104a06000610c96565b565b60606069805461035590611a1b565b600260975414156105045760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161045e565b6002609755826105495760405162461bcd60e51b815260206004820152601060248201526f043616e6e6f74206465706f73697420360841b604482015260640161045e565b60cc5460405163a1a33b9d60e01b81526001600160601b03841660048201526000916001600160a01b03169063a1a33b9d9060240160206040518083038186803b15801561059657600080fd5b505afa1580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190611ab9565b90506001600160a01b03811661061d5760405162461bcd60e51b81526020600482015260146024820152731a5b9d985b1a59081d9bdd1a5b99c81d985d5b1d60621b604482015260640161045e565b60cb5460405163d912c42760e01b81526001600160601b03851660048201526000916001600160a01b03169063d912c4279060240160206040518083038186803b15801561066a57600080fd5b505afa15801561067e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a29190611ab9565b90506001600160a01b0381166106ea5760405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a59081d985d5b1d609a1b604482015260640161045e565b8215610701576106fa8583610ce8565b9450610719565b6107193360c9546001600160a01b0316908488610e11565b61072285610e71565b61072c8186610ec4565b50506001609755505050565b3360009081526066602090815260408083206001600160a01b0386168452909152812054828110156107ba5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161045e565b6107c73385858403610b71565b5060019392505050565b60cc5460009081906001600160a01b0316637726a73c336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561082757600080fd5b505afa15801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f9190611ad6565b90506000816001600160601b0316116108a85760405162461bcd60e51b815260206004820152600b60248201526a6f6e6c79207661756c747360a81b604482015260640161045e565b60cc5460405163a1a33b9d60e01b81526001600160601b03831660048201526000916001600160a01b03169063a1a33b9d9060240160206040518083038186803b1580156108f557600080fd5b505afa158015610909573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092d9190611ab9565b90506001600160a01b0381166109775760405162461bcd60e51b815260206004820152600f60248201526e1b9bc81d9bdd1a5b99c81d985d5b1d608a1b604482015260640161045e565b6109813385610fa3565b60cc54604051637810f1eb60e01b8152600481018690526001600160a01b03838116602483015230604483015290911690637810f1eb90606401600060405180830381600087803b1580156109d557600080fd5b505af11580156109e9573d6000803e3d6000fd5b505050506109f784866110ee565b95945050505050565b600054610100900460ff1680610a19575060005460ff16155b610a355760405162461bcd60e51b815260040161045e90611af3565b600054610100900460ff16158015610a57576000805461ffff19166101011790555b610a5f61117b565b610a676111f6565b610a718787611225565b60c980546001600160a01b038088166001600160a01b03199283161790925560ca805487841690831617905560cb805486841690831617905560cc8054928516929091169190911790558015610acd576000805461ff00191690555b50505050505050565b6033546001600160a01b03163314610b005760405162461bcd60e51b815260040161045e90611a84565b6001600160a01b038116610b655760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161045e565b610b6e81610c96565b50565b6001600160a01b038316610bd35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161045e565b6001600160a01b038216610c345760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161045e565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610d023360ca546001600160a01b0316903086610e11565b60ca5460c95460405163095ea7b360e01b81526001600160a01b0391821660048201526024810186905291169063095ea7b390604401602060405180830381600087803b158015610d5257600080fd5b505af1158015610d66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8a9190611b41565b5060c954604051636e553f6560e01b8152600481018590526001600160a01b03848116602483015290911690636e553f6590604401602060405180830381600087803b158015610dd957600080fd5b505af1158015610ded573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f19190611b5e565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610e6b9085906112a4565b50505050565b60cd5481610e7e60675490565b610e889190611a6c565b1115610b6e5760405162461bcd60e51b815260206004820152600b60248201526a18d85c081c995858da195960aa1b604482015260640161045e565b6001600160a01b038216610f1a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161045e565b8060676000828254610f2c9190611a6c565b90915550506001600160a01b03821660009081526065602052604081208054839290610f59908490611a6c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166110035760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161045e565b6001600160a01b038216600090815260656020526040902054818110156110775760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161045e565b6001600160a01b03831660009081526065602052604081208383039055606780548492906110a6908490611b77565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610c89565b505050565b60c954604051635d043b2960e11b8152600481018490526001600160a01b038381166024830152306044830152600092169063ba08765290606401602060405180830381600087803b15801561114357600080fd5b505af1158015611157573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c79190611b5e565b600054610100900460ff1680611194575060005460ff16155b6111b05760405162461bcd60e51b815260040161045e90611af3565b600054610100900460ff161580156111d2576000805461ffff19166101011790555b6111da611376565b6111e26113e0565b8015610b6e576000805461ff001916905550565b600054610100900460ff1661121d5760405162461bcd60e51b815260040161045e90611b8e565b6104a0611440565b600054610100900460ff168061123e575060005460ff16155b61125a5760405162461bcd60e51b815260040161045e90611af3565b600054610100900460ff1615801561127c576000805461ffff19166101011790555b611284611376565b61128e838361146e565b80156110e9576000805461ff0019169055505050565b60006112f9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115039092919063ffffffff16565b8051909150156110e957808060200190518101906113179190611b41565b6110e95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161045e565b600054610100900460ff168061138f575060005460ff16155b6113ab5760405162461bcd60e51b815260040161045e90611af3565b600054610100900460ff161580156111e2576000805461ffff19166101011790558015610b6e576000805461ff001916905550565b600054610100900460ff16806113f9575060005460ff16155b6114155760405162461bcd60e51b815260040161045e90611af3565b600054610100900460ff16158015611437576000805461ffff19166101011790555b6111e233610c96565b600054610100900460ff166114675760405162461bcd60e51b815260040161045e90611b8e565b6001609755565b600054610100900460ff1680611487575060005460ff16155b6114a35760405162461bcd60e51b815260040161045e90611af3565b600054610100900460ff161580156114c5576000805461ffff19166101011790555b82516114d890606890602086019061167b565b5081516114ec90606990602085019061167b565b5080156110e9576000805461ff0019169055505050565b6060611512848460008561151a565b949350505050565b60608247101561157b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161045e565b843b6115c95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161045e565b600080866001600160a01b031685876040516115e59190611bd9565b60006040518083038185875af1925050503d8060008114611622576040519150601f19603f3d011682016040523d82523d6000602084013e611627565b606091505b5091509150611637828286611642565b979650505050505050565b606083156116515750816103f1565b8251156116615782518084602001fd5b8160405162461bcd60e51b815260040161045e9190611740565b82805461168790611a1b565b90600052602060002090601f0160209004810192826116a957600085556116ef565b82601f106116c257805160ff19168380011785556116ef565b828001600101855582156116ef579182015b828111156116ef5782518255916020019190600101906116d4565b506116fb9291506116ff565b5090565b5b808211156116fb5760008155600101611700565b60005b8381101561172f578181015183820152602001611717565b83811115610e6b5750506000910152565b602081526000825180602084015261175f816040850160208701611714565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610b6e57600080fd5b6000806040838503121561179b57600080fd5b82356117a681611773565b946020939093013593505050565b6000806000606084860312156117c957600080fd5b83356117d481611773565b925060208401356117e481611773565b929592945050506040919091013590565b60006020828403121561180757600080fd5b5035919050565b60006020828403121561182057600080fd5b81356103f181611773565b6001600160601b0381168114610b6e57600080fd5b8015158114610b6e57600080fd5b60008060006060848603121561186357600080fd5b8335925060208401356118758161182b565b9150604084013561188581611840565b809150509250925092565b600080604083850312156118a357600080fd5b82356118ae81611773565b915060208301356118be81611773565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126118f057600080fd5b813567ffffffffffffffff8082111561190b5761190b6118c9565b604051601f8301601f19908116603f01168101908282118183101715611933576119336118c9565b8160405283815286602085880101111561194c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c0878903121561198557600080fd5b863567ffffffffffffffff8082111561199d57600080fd5b6119a98a838b016118df565b975060208901359150808211156119bf57600080fd5b506119cc89828a016118df565b95505060408701356119dd81611773565b935060608701356119ed81611773565b925060808701356119fd81611773565b915060a0870135611a0d81611773565b809150509295509295509295565b600181811c90821680611a2f57607f821691505b60208210811415611a5057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611a7f57611a7f611a56565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611acb57600080fd5b81516103f181611773565b600060208284031215611ae857600080fd5b81516103f18161182b565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215611b5357600080fd5b81516103f181611840565b600060208284031215611b7057600080fd5b5051919050565b600082821015611b8957611b89611a56565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611beb818460208701611714565b919091019291505056fea2646970667358221220968c2013c7c2ef7805e8737a7be336fa252cf559dc0be3c27b7fbc8d74d6dadd64736f6c63430008090033";

type CappedERC4626ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CappedERC4626ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CappedERC4626__factory extends ContractFactory {
  constructor(...args: CappedERC4626ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CappedERC4626> {
    return super.deploy(overrides || {}) as Promise<CappedERC4626>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CappedERC4626 {
    return super.attach(address) as CappedERC4626;
  }
  override connect(signer: Signer): CappedERC4626__factory {
    return super.connect(signer) as CappedERC4626__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CappedERC4626Interface {
    return new utils.Interface(_abi) as CappedERC4626Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CappedERC4626 {
    return new Contract(address, _abi, signerOrProvider) as CappedERC4626;
  }
}