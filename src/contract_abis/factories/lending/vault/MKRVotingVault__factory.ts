/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MKRVotingVault,
  MKRVotingVaultInterface,
} from "../../../lending/MKRVotingVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint96",
        name: "id_",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "vault_address",
        type: "address",
      },
      {
        internalType: "address",
        name: "controller_address",
        type: "address",
      },
      {
        internalType: "address",
        name: "voting_controller_address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlyMKRVotingVaultController",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMinter",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVaultController",
    type: "error",
  },
  {
    inputs: [],
    name: "_mkrVotingVaultController",
    outputs: [
      {
        internalType: "contract MKRVotingVaultController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_vaultController",
    outputs: [
      {
        internalType: "contract IVaultController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "controllerTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "delegateMKRLikeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mkrLikeToken",
        type: "address",
      },
    ],
    name: "delegationStatus",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "delegatee",
            type: "address",
          },
          {
            internalType: "bool",
            name: "delegated",
            type: "bool",
          },
        ],
        internalType: "struct MKRVotingVault.DelegationStatus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegationStatuses",
    outputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "bool",
        name: "delegated",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "undelegateMKRLike",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "votingVaultControllerTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ef3380380610ef383398101604081905261002f916100b8565b604080518082019091526001600160601b039094168085526001600160a01b0393841660209095018590526c01000000000000000000000000909402909317600155600380549183166001600160a01b03199283161790556002805493909216921691909117905561011a565b80516001600160a01b03811681146100b357600080fd5b919050565b600080600080608085870312156100ce57600080fd5b84516001600160601b03811681146100e557600080fd5b93506100f36020860161009c565b92506101016040860161009c565b915061010f6060860161009c565b905092959194509250565b610dca806101296000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a3a199f211610066578063a3a199f214610163578063af640d0f146101e5578063b1290dad14610205578063cf3b1a1814610218578063dfe5d8e51461022b57600080fd5b80630fe36536146100a357806338a061f4146100d4578063470b71ff1461012857806360d8a4231461013d5780639b50438714610150575b600080fd5b600154600160601b90046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6101096100e2366004610c26565b6000602081905290815260409020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b0390931683529015156020830152016100cb565b61013b610136366004610c26565b61023e565b005b6002546100b7906001600160a01b031681565b61013b61015e366004610c43565b6103dd565b6101bf610171366004610c26565b604080518082018252600080825260209182018190526001600160a01b0393841681528082528290208251808401909352549283168252600160a01b90920460ff1615159181019190915290565b6040805182516001600160a01b03168152602092830151151592810192909252016100cb565b6001546040516bffffffffffffffffffffffff90911681526020016100cb565b6003546100b7906001600160a01b031681565b61013b610226366004610c43565b61042a565b61013b610239366004610c84565b61045e565b6001600001600c9054906101000a90046001600160a01b03166001600160a01b031663075461726040518163ffffffff1660e01b815260040160206040518083038186803b15801561028f57600080fd5b505afa1580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c79190610cbd565b6001600160a01b0316336001600160a01b0316146102f857604051639cdc2ed560e01b815260040160405180910390fd5b600080826001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b15801561033457600080fd5b505afa158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c9190610cbd565b6001600160a01b03168152602081019190915260400160002054600160a01b900460ff166103d15760405162461bcd60e51b815260206004820152600d60248201526c139bdd0819195b1959d85d1959609a1b60448201526064015b60405180910390fd5b6103da816106cd565b50565b6003546001600160a01b0316336001600160a01b03161461041157604051632b30c69960e11b815260040160405180910390fd5b61041a8361093e565b61042583838361098a565b505050565b6002546001600160a01b0316336001600160a01b03161461041157604051636eaa710160e11b815260040160405180910390fd5b6001600001600c9054906101000a90046001600160a01b03166001600160a01b031663075461726040518163ffffffff1660e01b815260040160206040518083038186803b1580156104af57600080fd5b505afa1580156104c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e79190610cbd565b6001600160a01b0316336001600160a01b03161461051857604051639cdc2ed560e01b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b15801561055a57600080fd5b505afa15801561056e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105929190610cda565b60405163095ea7b360e01b81526001600160a01b038581166004830152602482018390529192509083169063095ea7b390604401602060405180830381600087803b1580156105e057600080fd5b505af11580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190610cf3565b506040516337519c1960e21b8152600481018290526001600160a01b0384169063dd46706490602401600060405180830381600087803b15801561065b57600080fd5b505af115801561066f573d6000803e3d6000fd5b50506040805180820182526001600160a01b03968716815260016020808301918252968816600090815296879052919095209451855491511515600160a01b026001600160a81b031990921696169590951794909417909255505050565b6000816001600160a01b031663a2fca6b36040518163ffffffff1660e01b815260040160206040518083038186803b15801561070857600080fd5b505afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107409190610cbd565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a082319060240160206040518083038186803b15801561078557600080fd5b505afa158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd9190610cda565b60405163095ea7b360e01b81526001600160a01b038581166004830152602482018390529192509083169063095ea7b390604401602060405180830381600087803b15801561080b57600080fd5b505af115801561081f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108439190610cf3565b5060405163d8ccd0f360e01b8152600481018290526001600160a01b0384169063d8ccd0f390602401600060405180830381600087803b15801561088657600080fd5b505af115801561089a573d6000803e3d6000fd5b50505050600080846001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b1580156108da57600080fd5b505afa1580156108ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109129190610cbd565b6001600160a01b03168152602081019190915260400160002080546001600160a81b0319169055505050565b6001600160a01b038116600090815260208190526040902054600160a01b900460ff16156103da576001600160a01b038082166000908152602081905260409020546103da91166106cd565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261042592869291600091610a1a918516908490610a97565b8051909150156104255780806020019051810190610a389190610cf3565b6104255760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103c8565b6060610aa68484600085610ab0565b90505b9392505050565b606082471015610b115760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103c8565b843b610b5f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103c8565b600080866001600160a01b03168587604051610b7b9190610d45565b60006040518083038185875af1925050503d8060008114610bb8576040519150601f19603f3d011682016040523d82523d6000602084013e610bbd565b606091505b5091509150610bcd828286610bd8565b979650505050505050565b60608315610be7575081610aa9565b825115610bf75782518084602001fd5b8160405162461bcd60e51b81526004016103c89190610d61565b6001600160a01b03811681146103da57600080fd5b600060208284031215610c3857600080fd5b8135610aa981610c11565b600080600060608486031215610c5857600080fd5b8335610c6381610c11565b92506020840135610c7381610c11565b929592945050506040919091013590565b60008060408385031215610c9757600080fd5b8235610ca281610c11565b91506020830135610cb281610c11565b809150509250929050565b600060208284031215610ccf57600080fd5b8151610aa981610c11565b600060208284031215610cec57600080fd5b5051919050565b600060208284031215610d0557600080fd5b81518015158114610aa957600080fd5b60005b83811015610d30578181015183820152602001610d18565b83811115610d3f576000848401525b50505050565b60008251610d57818460208701610d15565b9190910192915050565b6020815260008251806020840152610d80816040850160208701610d15565b601f01601f1916919091016040019291505056fea2646970667358221220eac206c43a2a9985213de161cdad7b1317592cc13f80b9ea15016b82512a44b264736f6c63430008090033";

type MKRVotingVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MKRVotingVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MKRVotingVault__factory extends ContractFactory {
  constructor(...args: MKRVotingVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    id_: PromiseOrValue<BigNumberish>,
    vault_address: PromiseOrValue<string>,
    controller_address: PromiseOrValue<string>,
    voting_controller_address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MKRVotingVault> {
    return super.deploy(
      id_,
      vault_address,
      controller_address,
      voting_controller_address,
      overrides || {}
    ) as Promise<MKRVotingVault>;
  }
  override getDeployTransaction(
    id_: PromiseOrValue<BigNumberish>,
    vault_address: PromiseOrValue<string>,
    controller_address: PromiseOrValue<string>,
    voting_controller_address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      id_,
      vault_address,
      controller_address,
      voting_controller_address,
      overrides || {}
    );
  }
  override attach(address: string): MKRVotingVault {
    return super.attach(address) as MKRVotingVault;
  }
  override connect(signer: Signer): MKRVotingVault__factory {
    return super.connect(signer) as MKRVotingVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MKRVotingVaultInterface {
    return new utils.Interface(_abi) as MKRVotingVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MKRVotingVault {
    return new Contract(address, _abi, signerOrProvider) as MKRVotingVault;
  }
}