/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CappedToken,
  CappedTokenInterface,
} from "../../lending/CappedToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_underlying",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "convertToAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "convertToShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "underlying_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "underlying_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "maxDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "maxMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "maxRedeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "maxWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "previewDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "previewMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "previewRedeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "previewWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cap_",
        type: "uint256",
      },
    ],
    name: "setCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingScalar",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "underlying_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611ed7806100206000396000f3fe608060405234801561001057600080fd5b506004361061021b5760003560e01c806370a0823111610125578063b3d7f6b9116100ad578063ce96cb771161007c578063ce96cb7714610444578063d905777e14610457578063dd62ed3e1461046a578063ef8b30f7146102af578063f2fde38b146104a357600080fd5b8063b3d7f6b914610352578063c63d75b614610429578063c6e6f592146102af578063c70920bc1461043c57600080fd5b806394bf804d116100f457806394bf804d146103d557806395d89b41146103e85780639e573665146103f0578063a457c2d714610403578063a9059cbb1461041657600080fd5b806370a0823114610380578063715018a6146103a95780637bde82f2146103b15780638da5cb5b146103c457600080fd5b806323b872dd116101a857806347786d371161017757806347786d37146103375780634b4f6fa21461034a5780634cdad50614610352578063554d578d146103655780636e553f651461036d57600080fd5b806323b872dd146102ef578063313ce567146103025780633950935114610311578063402d267d1461032457600080fd5b806307a2d13a116101ef57806307a2d13a14610279578063095ea7b31461028c5780630a28a477146102af57806318160ddd146102c25780632140ea67146102ca57600080fd5b8062f714ce14610220578063060cf4e81461023557806306fdde0314610251578063077f224a14610266575b600080fd5b61023361022e36600461198d565b6104b6565b005b61023e60985481565b6040519081526020015b60405180910390f35b610259610771565b60405161024891906119b9565b610233610274366004611ab1565b610803565b61023e610287366004611b25565b610929565b61029f61029a366004611b3e565b61093a565b6040519015158152602001610248565b61023e6102bd366004611b25565b610950565b60675461023e565b6097546001600160a01b03165b6040516001600160a01b039091168152602001610248565b61029f6102fd366004611b68565b61095b565b60405160128152602001610248565b61029f61031f366004611b3e565b610a05565b61023e610332366004611ba4565b610a41565b610233610345366004611b25565b610b88565b61023e610bb7565b61023e610360366004611b25565b610be2565b60985461023e565b61023361037b36600461198d565b610bf5565b61023e61038e366004611ba4565b6001600160a01b031660009081526065602052604090205490565b610233610d72565b6102336103bf36600461198d565b610da8565b6033546001600160a01b03166102d7565b6102336103e336600461198d565b610dbe565b610259610dd0565b6097546102d7906001600160a01b031681565b61029f610411366004611b3e565b610ddf565b61029f610424366004611b3e565b610e78565b61023e610437366004611ba4565b610e85565b61023e610e93565b61023e610452366004611ba4565b610f0f565b61023e610465366004611ba4565b610ff0565b61023e610478366004611bbf565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6102336104b1366004611ba4565b610ffe565b60006104c183611099565b9050306370a08231336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561050957600080fd5b505afa15801561051d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105419190611be9565b81111561058a5760405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742066756e647360701b60448201526064015b60405180910390fd5b600081116105ce5760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b6044820152606401610581565b6097546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561061257600080fd5b505afa158015610626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064a9190611be9565b90508381101561069c5760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e7420756e6465726c79696e6720696e2042616e6b006044820152606401610581565b6106a633836110ad565b60975460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018790529091169063a9059cbb906044015b602060405180830381600087803b1580156106f557600080fd5b505af1158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190611c02565b61076b5760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b6044820152606401610581565b50505050565b60606068805461078090611c24565b80601f01602080910402602001604051908101604052809291908181526020018280546107ac90611c24565b80156107f95780601f106107ce576101008083540402835291602001916107f9565b820191906000526020600020905b8154815290600101906020018083116107dc57829003601f168201915b5050505050905090565b600054610100900460ff168061081c575060005460ff16155b6108385760405162461bcd60e51b815260040161058190611c5f565b600054610100900460ff1615801561085a576000805461ffff19166101011790555b6108626111fd565b61086c8484611278565b609780546001600160a01b0319166001600160a01b0384169081179091556040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b1580156108c057600080fd5b505afa1580156108d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190611cad565b609760146101000a81548160ff021916908360ff160217905550801561076b576000805461ff001916905550505050565b6000610934826112f7565b92915050565b600061094733848461130b565b50600192915050565b600061093482611099565b6000610968848484611427565b6001600160a01b0384166000908152606660209081526040808320338452909152902054828110156109ed5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610581565b6109fa853385840361130b565b506001949350505050565b3360008181526066602090815260408083206001600160a01b03871684529091528120549091610947918590610a3c908690611ce6565b61130b565b600080610a4c610bb7565b610a54610bb7565b610a5c610e93565b610a669190611cfe565b609854610a739190611d1d565b610a7d9190611d34565b6097546040516370a0823160e01b81526001600160a01b0386811660048301529293509116906370a082319060240160206040518083038186803b158015610ac457600080fd5b505afa158015610ad8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afc9190611be9565b811015610934576097546040516370a0823160e01b81526001600160a01b038581166004830152909116906370a08231906024015b60206040518083038186803b158015610b4957600080fd5b505afa158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b819190611be9565b9392505050565b6033546001600160a01b03163314610bb25760405162461bcd60e51b815260040161058190611d56565b609855565b609754600090610bd290600160a01b900460ff166012611d8b565b610bdd90600a611e92565b905090565b6000610934610bf083610950565b6112f7565b6000610c0083611099565b905060008111610c455760405162461bcd60e51b815260206004820152601060248201526f043616e6e6f74206465706f73697420360841b6044820152606401610581565b610c4e816115f5565b6097546000906001600160a01b031663dd62ed3e336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260440160206040518083038186803b158015610ca857600080fd5b505afa158015610cbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce09190611be9565b905083811015610d2b5760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420416c6c6f77616e636560501b6044820152606401610581565b610d358383611648565b6097546040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b03909116906323b872dd906064016106db565b6033546001600160a01b03163314610d9c5760405162461bcd60e51b815260040161058190611d56565b610da66000611727565b565b610dba610db4836112f7565b826104b6565b5050565b610dba610dca836112f7565b82610bf5565b60606069805461078090611c24565b3360009081526066602090815260408083206001600160a01b038616845290915281205482811015610e615760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610581565b610e6e338585840361130b565b5060019392505050565b6000610947338484611427565b6000610934610bf083610a41565b6097546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610ed757600080fd5b505afa158015610eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdd9190611be9565b600080610f1a610bb7565b6001600160a01b038416600090815260656020526040902054610f3d9190611d34565b6097546040516370a0823160e01b81523060048201529192506001600160a01b0316906370a082319060240160206040518083038186803b158015610f8157600080fd5b505afa158015610f95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb99190611be9565b811115610934576097546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401610b31565b6000610934610bf083610f0f565b6033546001600160a01b031633146110285760405162461bcd60e51b815260040161058190611d56565b6001600160a01b03811661108d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610581565b61109681611727565b50565b60006110a3610bb7565b6109349083611cfe565b6001600160a01b03821661110d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610581565b6001600160a01b038216600090815260656020526040902054818110156111815760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610581565b6001600160a01b03831660009081526065602052604081208383039055606780548492906111b0908490611d1d565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35b505050565b600054610100900460ff1680611216575060005460ff16155b6112325760405162461bcd60e51b815260040161058190611c5f565b600054610100900460ff16158015611254576000805461ffff19166101011790555b61125c611779565b6112646117e3565b8015611096576000805461ff001916905550565b600054610100900460ff1680611291575060005460ff16155b6112ad5760405162461bcd60e51b815260040161058190611c5f565b600054610100900460ff161580156112cf576000805461ffff19166101011790555b6112d7611779565b6112e18383611843565b80156111f8576000805461ff0019169055505050565b6000611301610bb7565b6109349083611d34565b6001600160a01b03831661136d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610581565b6001600160a01b0382166113ce5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610581565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591016111ef565b6001600160a01b03831661148b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610581565b6001600160a01b0382166114ed5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610581565b6001600160a01b038316600090815260656020526040902054818110156115655760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610581565b6001600160a01b0380851660009081526065602052604080822085850390559185168152908120805484929061159c908490611ce6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115e891815260200190565b60405180910390a361076b565b6098548161160260675490565b61160c9190611ce6565b11156110965760405162461bcd60e51b815260206004820152600b60248201526a18d85c081c995858da195960aa1b6044820152606401610581565b6001600160a01b03821661169e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610581565b80606760008282546116b09190611ce6565b90915550506001600160a01b038216600090815260656020526040812080548392906116dd908490611ce6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680611792575060005460ff16155b6117ae5760405162461bcd60e51b815260040161058190611c5f565b600054610100900460ff16158015611264576000805461ffff19166101011790558015611096576000805461ff001916905550565b600054610100900460ff16806117fc575060005460ff16155b6118185760405162461bcd60e51b815260040161058190611c5f565b600054610100900460ff1615801561183a576000805461ffff19166101011790555b61126433611727565b600054610100900460ff168061185c575060005460ff16155b6118785760405162461bcd60e51b815260040161058190611c5f565b600054610100900460ff1615801561189a576000805461ffff19166101011790555b82516118ad9060689060208601906118d8565b5081516118c19060699060208501906118d8565b5080156111f8576000805461ff0019169055505050565b8280546118e490611c24565b90600052602060002090601f016020900481019282611906576000855561194c565b82601f1061191f57805160ff191683800117855561194c565b8280016001018555821561194c579182015b8281111561194c578251825591602001919060010190611931565b5061195892915061195c565b5090565b5b80821115611958576000815560010161195d565b80356001600160a01b038116811461198857600080fd5b919050565b600080604083850312156119a057600080fd5b823591506119b060208401611971565b90509250929050565b600060208083528351808285015260005b818110156119e6578581018301518582016040015282016119ca565b818111156119f8576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611a3557600080fd5b813567ffffffffffffffff80821115611a5057611a50611a0e565b604051601f8301601f19908116603f01168101908282118183101715611a7857611a78611a0e565b81604052838152866020858801011115611a9157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611ac657600080fd5b833567ffffffffffffffff80821115611ade57600080fd5b611aea87838801611a24565b94506020860135915080821115611b0057600080fd5b50611b0d86828701611a24565b925050611b1c60408501611971565b90509250925092565b600060208284031215611b3757600080fd5b5035919050565b60008060408385031215611b5157600080fd5b611b5a83611971565b946020939093013593505050565b600080600060608486031215611b7d57600080fd5b611b8684611971565b9250611b9460208501611971565b9150604084013590509250925092565b600060208284031215611bb657600080fd5b610b8182611971565b60008060408385031215611bd257600080fd5b611bdb83611971565b91506119b060208401611971565b600060208284031215611bfb57600080fd5b5051919050565b600060208284031215611c1457600080fd5b81518015158114610b8157600080fd5b600181811c90821680611c3857607f821691505b60208210811415611c5957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215611cbf57600080fd5b815160ff81168114610b8157600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611cf957611cf9611cd0565b500190565b6000816000190483118215151615611d1857611d18611cd0565b500290565b600082821015611d2f57611d2f611cd0565b500390565b600082611d5157634e487b7160e01b600052601260045260246000fd5b500490565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060ff821660ff841680821015611da557611da5611cd0565b90039392505050565b600181815b80851115611de9578160001904821115611dcf57611dcf611cd0565b80851615611ddc57918102915b93841c9390800290611db3565b509250929050565b600082611e0057506001610934565b81611e0d57506000610934565b8160018114611e235760028114611e2d57611e49565b6001915050610934565b60ff841115611e3e57611e3e611cd0565b50506001821b610934565b5060208310610133831016604e8410600b8410161715611e6c575081810a610934565b611e768383611dae565b8060001904821115611e8a57611e8a611cd0565b029392505050565b6000610b8160ff841683611df156fea2646970667358221220b2cb7fed819b7f3b27b7636de859ac23705eebf9c55060d118b2438ae6c93afb64736f6c63430008090033";

type CappedTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CappedTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CappedToken__factory extends ContractFactory {
  constructor(...args: CappedTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CappedToken> {
    return super.deploy(overrides || {}) as Promise<CappedToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CappedToken {
    return super.attach(address) as CappedToken;
  }
  override connect(signer: Signer): CappedToken__factory {
    return super.connect(signer) as CappedToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CappedTokenInterface {
    return new utils.Interface(_abi) as CappedTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CappedToken {
    return new Contract(address, _abi, signerOrProvider) as CappedToken;
  }
}
