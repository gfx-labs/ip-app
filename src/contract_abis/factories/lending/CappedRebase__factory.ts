/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CappedRebaseToken,
  CappedRebaseTokenInterface,
} from "../../lending/CappedRebase";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_underlying",
    outputs: [
      {
        internalType: "contract ERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_vaultController",
    outputs: [
      {
        internalType: "contract IVaultController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOfUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint96",
        name: "vaultId",
        type: "uint96",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "underlying_",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultController_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cap_",
        type: "uint256",
      },
    ],
    name: "setCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "underlyingAmount",
        type: "uint256",
      },
    ],
    name: "underlyingToWrapper",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cappedAmount",
        type: "uint256",
      },
    ],
    name: "wrapperToUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b2a806100206000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c8063715018a6116100f9578063aab3b7db11610097578063c70920bc11610071578063c70920bc1461034c578063dd62ed3e14610354578063ed0287c01461038d578063f2fde38b146103a057600080fd5b8063aab3b7db14610313578063b1290dad14610326578063b66c72ac1461033957600080fd5b806395d89b41116100d357806395d89b41146102d25780639e573665146102da578063a457c2d7146102ed578063a9059cbb1461030057600080fd5b8063715018a6146102a65780638da5cb5b146102ae5780638f15b414146102bf57600080fd5b806332cb6b0c1161016657806347786d371161014057806347786d3714610264578063554d578d146102795780636f307dc31461028157806370a082311461025157600080fd5b806332cb6b0c1461022c578063395093511461023e5780633af9e6691461025157600080fd5b8063060cf4e8146101ae57806306fdde03146101ca578063095ea7b3146101df57806318160ddd1461020257806323b872dd1461020a578063313ce5671461021d575b600080fd5b6101b760995481565b6040519081526020015b60405180910390f35b6101d26103b3565b6040516101c19190611695565b6101f26101ed3660046116dd565b610445565b60405190151581526020016101c1565b6067546101b7565b6101f2610218366004611709565b61045b565b604051601281526020016101c1565b6101b76a084595161401484a00000081565b6101f261024c3660046116dd565b610465565b6101b761025f36600461174a565b6104a1565b610277610272366004611767565b6104d1565b005b6099546101b7565b6097546001600160a01b03165b6040516001600160a01b0390911681526020016101c1565b610277610509565b6033546001600160a01b031661028e565b6102776102cd366004611823565b61053f565b6101d26105f1565b60975461028e906001600160a01b031681565b6101f26102fb3660046116dd565b610600565b6101f261030e3660046116dd565b610699565b6101b7610321366004611767565b610800565b60985461028e906001600160a01b031681565b6102776103473660046118c1565b61080e565b6101b7610a66565b6101b76103623660046118f1565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6101b761039b366004611767565b610a81565b6102776103ae36600461174a565b610a8f565b6060606880546103c29061191f565b80601f01602080910402602001604051908101604052809291908181526020018280546103ee9061191f565b801561043b5780601f106104105761010080835404028352916020019161043b565b820191906000526020600020905b81548152906001019060200180831161041e57829003601f168201915b5050505050905090565b6000610452338484610b2a565b50600192915050565b60005b9392505050565b3360008181526066602090815260408083206001600160a01b0387168452909152812054909161045291859061049c908690611970565b610b2a565b6001600160a01b0381166000908152606560205260408120546104cb906104c6610c4e565b610ccb565b92915050565b6033546001600160a01b031633146105045760405162461bcd60e51b81526004016104fb90611988565b60405180910390fd5b609955565b6033546001600160a01b031633146105335760405162461bcd60e51b81526004016104fb90611988565b61053d6000610ced565b565b600054610100900460ff1680610558575060005460ff16155b6105745760405162461bcd60e51b81526004016104fb906119bd565b600054610100900460ff16158015610596576000805461ffff19166101011790555b61059e610d3f565b6105a88585610dba565b609780546001600160a01b038086166001600160a01b031992831617909255609880549285169290911691909117905580156105ea576000805461ff00191690555b5050505050565b6060606980546103c29061191f565b3360009081526066602090815260408083206001600160a01b0386168452909152812054828110156106825760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104fb565b61068f3385858403610b2a565b5060019392505050565b6000803390506000816001600160a01b031663af640d0f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107129190611a0b565b6001600160601b0316116107565760405162461bcd60e51b815260206004820152600b60248201526a6f6e6c79207661756c747360a81b60448201526064016104fb565b60006107e784609760009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107aa57600080fd5b505afa1580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e29190611a28565b610e3a565b90506107f582868684610e52565b506001949350505050565b60006104cb826104c6610c4e565b600082116108515760405162461bcd60e51b815260206004820152601060248201526f043616e6e6f74206465706f73697420360841b60448201526064016104fb565b60985460405163d912c42760e01b81526001600160601b03831660048201526000916001600160a01b03169063d912c4279060240160206040518083038186803b15801561089e57600080fd5b505afa1580156108b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d69190611a41565b90506001600160a01b03811661091e5760405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a59081d985d5b1d609a1b60448201526064016104fb565b61092783610e79565b6097546000906001600160a01b031663dd62ed3e336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260440160206040518083038186803b15801561098157600080fd5b505afa158015610995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b99190611a28565b905083811015610a045760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420416c6c6f77616e636560501b60448201526064016104fb565b6000610a5885609760009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107aa57600080fd5b90506105ea33848784610f3d565b6000610a7c610a7460675490565b6107e2610c4e565b905090565b60006104cb826107e2610c4e565b6033546001600160a01b03163314610ab95760405162461bcd60e51b81526004016104fb90611988565b6001600160a01b038116610b1e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104fb565b610b2781610ced565b50565b6001600160a01b038316610b8c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104fb565b6001600160a01b038216610bed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104fb565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b609754604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b158015610c9357600080fd5b505afa158015610ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7c9190611a28565b60006a084595161401484a000000610ce38385611a5e565b61045e9190611a7d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610d58575060005460ff16155b610d745760405162461bcd60e51b81526004016104fb906119bd565b600054610100900460ff16158015610d96576000805461ffff19166101011790555b610d9e610f5f565b610da6610fc9565b8015610b27576000805461ff001916905550565b600054610100900460ff1680610dd3575060005460ff16155b610def5760405162461bcd60e51b81526004016104fb906119bd565b600054610100900460ff16158015610e11576000805461ffff19166101011790555b610e19610f5f565b610e238383611029565b8015610e35576000805461ff00191690555b505050565b600081610ce36a084595161401484a00000085611a5e565b610e5c84826110be565b609754610e73906001600160a01b0316848461120c565b50505050565b6099546097546040516370a0823160e01b815230600482015283916001600160a01b0316906370a082319060240160206040518083038186803b158015610ebf57600080fd5b505afa158015610ed3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef79190611a28565b610f019190611970565b1115610b275760405162461bcd60e51b815260206004820152600b60248201526a18d85c081c995858da195960aa1b60448201526064016104fb565b610f47838261126f565b609754610e73906001600160a01b031685308561134e565b600054610100900460ff1680610f78575060005460ff16155b610f945760405162461bcd60e51b81526004016104fb906119bd565b600054610100900460ff16158015610da6576000805461ffff19166101011790558015610b27576000805461ff001916905550565b600054610100900460ff1680610fe2575060005460ff16155b610ffe5760405162461bcd60e51b81526004016104fb906119bd565b600054610100900460ff16158015611020576000805461ffff19166101011790555b610da633610ced565b600054610100900460ff1680611042575060005460ff16155b61105e5760405162461bcd60e51b81526004016104fb906119bd565b600054610100900460ff16158015611080576000805461ffff19166101011790555b82516110939060689060208601906115d0565b5081516110a79060699060208501906115d0565b508015610e35576000805461ff0019169055505050565b6001600160a01b03821661111e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104fb565b6001600160a01b038216600090815260656020526040902054818110156111925760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104fb565b6001600160a01b03831660009081526065602052604081208383039055606780548492906111c1908490611a9f565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b038316602482015260448101829052610e3590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611386565b6001600160a01b0382166112c55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104fb565b80606760008282546112d79190611970565b90915550506001600160a01b03821660009081526065602052604081208054839290611304908490611970565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610e739085906323b872dd60e01b90608401611238565b60006113db826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114589092919063ffffffff16565b805190915015610e3557808060200190518101906113f99190611ab6565b610e355760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104fb565b6060611467848460008561146f565b949350505050565b6060824710156114d05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104fb565b843b61151e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104fb565b600080866001600160a01b0316858760405161153a9190611ad8565b60006040518083038185875af1925050503d8060008114611577576040519150601f19603f3d011682016040523d82523d6000602084013e61157c565b606091505b509150915061158c828286611597565b979650505050505050565b606083156115a657508161045e565b8251156115b65782518084602001fd5b8160405162461bcd60e51b81526004016104fb9190611695565b8280546115dc9061191f565b90600052602060002090601f0160209004810192826115fe5760008555611644565b82601f1061161757805160ff1916838001178555611644565b82800160010185558215611644579182015b82811115611644578251825591602001919060010190611629565b50611650929150611654565b5090565b5b808211156116505760008155600101611655565b60005b8381101561168457818101518382015260200161166c565b83811115610e735750506000910152565b60208152600082518060208401526116b4816040850160208701611669565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610b2757600080fd5b600080604083850312156116f057600080fd5b82356116fb816116c8565b946020939093013593505050565b60008060006060848603121561171e57600080fd5b8335611729816116c8565b92506020840135611739816116c8565b929592945050506040919091013590565b60006020828403121561175c57600080fd5b813561045e816116c8565b60006020828403121561177957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126117a757600080fd5b813567ffffffffffffffff808211156117c2576117c2611780565b604051601f8301601f19908116603f011681019082821181831017156117ea576117ea611780565b8160405283815286602085880101111561180357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561183957600080fd5b843567ffffffffffffffff8082111561185157600080fd5b61185d88838901611796565b9550602087013591508082111561187357600080fd5b5061188087828801611796565b9350506040850135611891816116c8565b915060608501356118a1816116c8565b939692955090935050565b6001600160601b0381168114610b2757600080fd5b600080604083850312156118d457600080fd5b8235915060208301356118e6816118ac565b809150509250929050565b6000806040838503121561190457600080fd5b823561190f816116c8565b915060208301356118e6816116c8565b600181811c9082168061193357607f821691505b6020821081141561195457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156119835761198361195a565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215611a1d57600080fd5b815161045e816118ac565b600060208284031215611a3a57600080fd5b5051919050565b600060208284031215611a5357600080fd5b815161045e816116c8565b6000816000190483118215151615611a7857611a7861195a565b500290565b600082611a9a57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611ab157611ab161195a565b500390565b600060208284031215611ac857600080fd5b8151801515811461045e57600080fd5b60008251611aea818460208701611669565b919091019291505056fea26469706673582212204d2bba17f65440528bd5478419a15cc668b3944891f962f17f09f6a0f458b8af64736f6c63430008090033";

type CappedRebaseTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CappedRebaseTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CappedRebaseToken__factory extends ContractFactory {
  constructor(...args: CappedRebaseTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CappedRebaseToken> {
    return super.deploy(overrides || {}) as Promise<CappedRebaseToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CappedRebaseToken {
    return super.attach(address) as CappedRebaseToken;
  }
  override connect(signer: Signer): CappedRebaseToken__factory {
    return super.connect(signer) as CappedRebaseToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CappedRebaseTokenInterface {
    return new utils.Interface(_abi) as CappedRebaseTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CappedRebaseToken {
    return new Contract(address, _abi, signerOrProvider) as CappedRebaseToken;
  }
}